enum kstruct_offset {
    /* struct task */
    KSTRUCT_OFFSET_TASK_LCK_MTX_TYPE_TW,
    KSTRUCT_OFFSET_TASK_REF_COUNT_TW,
    KSTRUCT_OFFSET_TASK_ACTIVE_TW,
    KSTRUCT_OFFSET_TASK_VM_MAP_TW,
    KSTRUCT_OFFSET_TASK_NEXT_TW,
    KSTRUCT_OFFSET_TASK_PREV_TW,
    KSTRUCT_OFFSET_TASK_ITK_SELF_TW,
    KSTRUCT_OFFSET_TASK_ITK_SPACE_TW,
    KSTRUCT_OFFSET_TASK_BSD_INFO_TW,
    
    /* struct ipc_port */
    KSTRUCT_OFFSET_IPC_PORT_IO_BITS_TW,
    KSTRUCT_OFFSET_IPC_PORT_IO_REFERENCES_TW,
    KSTRUCT_OFFSET_IPC_PORT_IKMQ_BASE_TW,
    KSTRUCT_OFFSET_IPC_PORT_MSG_COUNT_TW,
    KSTRUCT_OFFSET_IPC_PORT_IP_RECEIVER_TW,
    KSTRUCT_OFFSET_IPC_PORT_IP_KOBJECT_TW,
    KSTRUCT_OFFSET_IPC_PORT_IP_PREMSG_TW,
    KSTRUCT_OFFSET_IPC_PORT_IP_CONTEXT_TW,
    KSTRUCT_OFFSET_IPC_PORT_IP_SRIGHTS_TW,
    
    /* struct proc */
    KSTRUCT_OFFSET_PROC_TASK_TW,
    KSTRUCT_OFFSET_PROC_PID_TW,
    KSTRUCT_OFFSET_PROC_P_FD_TW,
    
    KSTRUCT_OFFSET_PROC_UCRED_TW,
    KSTRUCT_OFFSET_PROC_P_LIST_TW,
    KSTRUCT_OFFSET_PROC_P_CSFLAGS_TW,
    KSTRUCT_OFFSET_PROC_P_MEMSTAT_STATE_TW,
    KSTRUCT_OFFSET_PROC_MLOCK_TW,
    KSTRUCT_OFFSET_PROC_UCRED_MLOCK_TW,
    KSTRUCT_OFFSET_PROC_SVUID_TW,
    KSTRUCT_OFFSET_PROC_SVGID_TW,
    /* struct filedesc */
    KSTRUCT_OFFSET_FILEDESC_FD_OFILES_TW,
    
    /* struct fileproc */
    KSTRUCT_OFFSET_FILEPROC_F_FGLOB_TW,
    
    /* struct fileglob */
    KSTRUCT_OFFSET_FILEGLOB_FG_DATA_TW,
    
    /* struct socket */
    KSTRUCT_OFFSET_SOCKET_SO_PCB_TW,
    
    /* struct pipe */
    KSTRUCT_OFFSET_PIPE_BUFFER_TW,
    
    /* struct ipc_space */
    KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE_SIZE_TW,
    KSTRUCT_OFFSET_IPC_SPACE_IS_TABLE_TW,
    KSTRUCT_OFFSET_IPC_SPACE_IS_TASK_TW,
    
    KFREE_ADDR_OFFSET_TW,
    
    IOSURFACE_CREATE_OUTSIZE_TW,
    
    OFFSET_GETFI_TW,
};

int koffset_TW(enum kstruct_offset offset_TW);
int init_offsets_TW(void);
